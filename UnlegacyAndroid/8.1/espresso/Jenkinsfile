pipeline {
    agent {
            label 'linux'
    }

    stages {
        stage('Setup environment') {
            steps {
                sh 'cd /mnt/Files/jenkins/Android/UnlegacyAndroid'
                sh 'export CCACHE_DIR=/mnt/Files/ccache'
                sh 'export CCACHE_EXEC=/usr/bin/ccache'
                sh 'export USE_CCACHE=1'
                sh 'export LC_ALL=C'
                sh 'mkdir -p ~/bin'
                sh 'test -h ~/bin/python && echo "Step skipped." || ln -s /usr/bin/python2 ~/bin/python'
                sh 'test -h ~/bin/python-config && echo "Step skipped." || ln -s /usr/bin/python2-config ~/bin/python-config'
                sh 'export PATH=~/bin:$PATH'
                sh 'curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo'
                sh 'chmod a+x ~/bin/repo'
            }
        }
        stage('Sync sources') {
            steps {
                sh 'source UnlegacyAndroid/8.1/espresso/vars.sh; cd /mnt/Files/jenkins/Android/UnlegacyAndroid; repo sync -c --no-clone-bundle --no-tags -j12'
            }
        }
        stage('Build espressowifi') {
            steps {
                sh 'source UnlegacyAndroid/8.1/espresso/espressowifi.sh'

                dir("/mnt/Files/jenkins/Android/UnlegacyAndroid/out/target/product/espresso") {
                  archiveArtifacts artifacts: '*.zip', excludes: '*-ota-*', fingerprint: true, onlyIfSuccessful: true
                  archiveArtifacts artifacts: '*.md5sum', excludes: '*-ota-*', fingerprint: true, onlyIfSuccessful: true

                  sh '''
                  export OUTPUT_FILE_NAME=ua_espresso-8.1.0
                  export LATEST_DATE=$(date +"%Y%m%d")
                  export FILE_NAME=${OUTPUT_FILE_NAME}-${LATEST_DATE}

                  mv ${FILE_NAME}.zip /mnt/Files/jenkins/Android/builds/${FILE_NAME}.zip
                  mv ${FILE_NAME}.zip.md5sum /mnt/Files/jenkins/Android/builds/${FILE_NAME}.zip.md5sum
                  '''
                }

                withCredentials([string(credentialsId: 'discord-webhook-android', variable: 'SECRET')]) { //set SECRET with the credential content
                  discordSend description: "espressowifi build successful", footer: "UnlegacyAndroid 8.1",
                  link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME,
                  thumbnail: "https://upload.wikimedia.org/wikipedia/commons/e/e4/Android_Oreo_logo.png",
                  webhookURL: "${SECRET}"
                }
            }
        }
        stage('Build espresso3g') {
            steps {
              sh 'source UnlegacyAndroid/8.1/espresso/espresso3g.sh'

              dir("/mnt/Files/jenkins/Android/UnlegacyAndroid/out/target/product/espresso3g") {
                archiveArtifacts artifacts: '*.zip', excludes: '*-ota-*', fingerprint: true, onlyIfSuccessful: true
                archiveArtifacts artifacts: '*.md5sum', excludes: '*-ota-*', fingerprint: true, onlyIfSuccessful: true

                sh '''
                export OUTPUT_FILE_NAME=ua_espresso3g-8.1.0
                export LATEST_DATE=$(date +"%Y%m%d")
                export FILE_NAME=${OUTPUT_FILE_NAME}-${LATEST_DATE}

                mv ${FILE_NAME}.zip /mnt/Files/jenkins/Android/builds/${FILE_NAME}.zip
                mv ${FILE_NAME}.zip.md5sum /mnt/Files/jenkins/Android/builds/${FILE_NAME}.zip.md5sum
                '''
              }

              withCredentials([string(credentialsId: 'discord-webhook-android', variable: 'SECRET')]) { //set SECRET with the credential content
                discordSend description: "espresso3g build successful", footer: "UnlegacyAndroid 8.1",
                link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME,
                thumbnail: "https://upload.wikimedia.org/wikipedia/commons/e/e4/Android_Oreo_logo.png",
                webhookURL: "${SECRET}"
              }
            }
        }
    }
}
